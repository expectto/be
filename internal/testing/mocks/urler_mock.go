// Code generated by MockGen. DO NOT EDIT.
// Source: internal/testing/urler.go
//
// Generated by this command:
//
//	mockgen -source=internal/testing/urler.go -destination=internal/testing/mocks/urler_mock.go -package=mocks
//
// Package mocks is a generated GoMock package.
package mocks

import (
	url "net/url"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUrler is a mock of Urler interface.
type MockUrler struct {
	ctrl     *gomock.Controller
	recorder *MockUrlerMockRecorder
}

// MockUrlerMockRecorder is the mock recorder for MockUrler.
type MockUrlerMockRecorder struct {
	mock *MockUrler
}

// NewMockUrler creates a new mock instance.
func NewMockUrler(ctrl *gomock.Controller) *MockUrler {
	mock := &MockUrler{ctrl: ctrl}
	mock.recorder = &MockUrlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUrler) EXPECT() *MockUrlerMockRecorder {
	return m.recorder
}

// SetUrl mocks base method.
func (m *MockUrler) SetUrl(url *url.URL) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetUrl", url)
}

// SetUrl indicates an expected call of SetUrl.
func (mr *MockUrlerMockRecorder) SetUrl(url any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetUrl", reflect.TypeOf((*MockUrler)(nil).SetUrl), url)
}
